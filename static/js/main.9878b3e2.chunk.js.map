{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelectTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","onChangeQuery","onChangeStatus","statusOptions","query","onChange","event","target","value","status","charAt","toUpperCase","slice","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","deselectTodo","useState","user","setUser","loadUser","a","userId","loadedUser","useEffect","href","email","name","ACTIVE","COMPLETED","App","setTodos","selectedTodo","setSelectedTodo","setStatus","setQuery","filteredTodos","filter","toLowerCase","includes","loadTodos","loadedtodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9878b3e2.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number | undefined;\n  onSelectTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames(\n            {\n              'has-background-info-light': selectedTodoId === todo.id,\n            },\n          )}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n          <td className=\"is-vcentered\">\n            {todo.completed\n            && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                {\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames(\n                    'far',\n                    {\n                      'fa-eye': selectedTodoId !== todo.id,\n                      'fa-eye-slash': selectedTodoId === todo.id,\n                    },\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  onChangeQuery: (query: string) => void;\n  onChangeStatus: (status: string) => void;\n  statusOptions: string[];\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onChangeQuery,\n  onChangeStatus,\n  statusOptions,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => onChangeStatus(event.target.value)}\n        >\n          {statusOptions.map(status => (\n            <option value={status}>\n              {status.charAt(0).toUpperCase() + status.slice(1)}\n            </option>\n          ))}\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        value={query}\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={(event) => onChangeQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {(query.length > 0)\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => (onChangeQuery(''))}\n            />\n          </span>\n        )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  deselectTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  deselectTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUser = async () => {\n    const loadedUser = await getUser(todo.userId);\n\n    setUser(loadedUser);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user === null ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={deselectTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nconst ALL = 'all';\nconst ACTIVE = 'active';\nconst COMPLETED = 'completed';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState(ALL);\n  const [query, setQuery] = useState('');\n\n  const filteredTodos = todos.filter((todo) => {\n    if (status === ACTIVE && todo.completed) {\n      return false;\n    }\n\n    if (status === COMPLETED && !todo.completed) {\n      return false;\n    }\n\n    return todo.title.toLowerCase().includes(query.toLowerCase());\n  });\n\n  const loadTodos = async () => {\n    const loadedtodos = await getTodos();\n\n    setTodos(loadedtodos);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeQuery={setQuery}\n                onChangeStatus={setStatus}\n                statusOptions={[ALL, ACTIVE, COMPLETED]}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={filteredTodos}\n                    onSelectTodo={setSelectedTodo}\n                    selectedTodoId={selectedTodo?.id}\n                  />\n                )\n                : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          deselectTodo={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}