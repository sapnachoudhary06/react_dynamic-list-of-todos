{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","App.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelectTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","onChangeQuery","onChangeStatus","statusOptions","query","useState","selectedStatus","setSelectedStatus","handleStatusChange","useCallback","event","target","value","onChange","status","charAt","toUpperCase","slice","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoStatus","Loader","TodoModal","deselectTodo","user","setUser","loadUser","a","userId","loadedUser","useEffect","href","email","name","App","setTodos","selectedTodo","setSelectedTodo","ALL","setStatus","setQuery","filteredTodos","useMemo","filter","ACTIVE","COMPLETED","toLowerCase","includes","loadTodos","loadedtodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7bb4333.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number | undefined;\n  onSelectTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames(\n            {\n              'has-background-info-light': selectedTodoId === todo.id,\n            },\n          )}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n          <td className=\"is-vcentered\">\n            {todo.completed\n            && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                {\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames(\n                    'far',\n                    {\n                      'fa-eye': selectedTodoId !== todo.id,\n                      'fa-eye-slash': selectedTodoId === todo.id,\n                    },\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { useCallback, useState } from 'react';\n\ntype Props = {\n  onChangeQuery: (query: string) => void;\n  onChangeStatus: (status: string) => void;\n  statusOptions: string[];\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onChangeQuery,\n  onChangeStatus,\n  statusOptions,\n  query,\n}) => {\n  const [selectedStatus, setSelectedStatus] = useState(statusOptions[0]);\n\n  const handleStatusChange = useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) => {\n      onChangeStatus(event.target.value);\n      setSelectedStatus(event.target.value);\n    },\n    [],\n  );\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedStatus}\n            onChange={handleStatusChange}\n          >\n            {statusOptions.map(status => (\n              <option value={status}>\n                {status.charAt(0).toUpperCase() + status.slice(1)}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          value={query}\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => onChangeQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {(query.length > 0)\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => (onChangeQuery(''))}\n              />\n            </span>\n          )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nenum TodoStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState<string>(TodoStatus.ALL);\n  const [query, setQuery] = useState('');\n\n  const filteredTodos = useMemo(() => (\n    todos.filter((todo) => {\n      if (status === TodoStatus.ACTIVE && todo.completed) {\n        return false;\n      }\n\n      if (status === TodoStatus.COMPLETED && !todo.completed) {\n        return false;\n      }\n\n      return todo.title.toLowerCase().includes(query.toLowerCase());\n    })\n  ), [todos, status]);\n\n  const loadTodos = useCallback(async () => {\n    const loadedtodos = await getTodos();\n\n    setTodos(loadedtodos);\n  }, []);\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeQuery={setQuery}\n                onChangeStatus={setStatus}\n                statusOptions={[TodoStatus.ALL, TodoStatus.ACTIVE, TodoStatus.COMPLETED]}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={filteredTodos}\n                    onSelectTodo={setSelectedTodo}\n                    selectedTodoId={selectedTodo?.id}\n                  />\n                )\n                : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          deselectTodo={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  deselectTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  deselectTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUser = useCallback(async () => {\n    const loadedUser = await getUser(todo.userId);\n\n    setUser(loadedUser);\n  }, [todo]);\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user === null ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={deselectTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}